#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UMS")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmarks_tbl(marks_tbl instance);
    partial void Updatemarks_tbl(marks_tbl instance);
    partial void Deletemarks_tbl(marks_tbl instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::UMS.Properties.Settings.Default.UMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<marks_tbl> marks_tbls
		{
			get
			{
				return this.GetTable<marks_tbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.marks_tbl")]
	public partial class marks_tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _student_id;
		
		private System.Nullable<int> _quiz;
		
		private System.Nullable<int> _class_performance;
		
		private System.Nullable<int> _final;
		
		private System.Nullable<int> _total;
		
		private string _grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void OnquizChanging(System.Nullable<int> value);
    partial void OnquizChanged();
    partial void Onclass_performanceChanging(System.Nullable<int> value);
    partial void Onclass_performanceChanged();
    partial void OnfinalChanging(System.Nullable<int> value);
    partial void OnfinalChanged();
    partial void OntotalChanging(System.Nullable<int> value);
    partial void OntotalChanged();
    partial void OngradeChanging(string value);
    partial void OngradeChanged();
    #endregion
		
		public marks_tbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quiz", DbType="Int")]
		public System.Nullable<int> quiz
		{
			get
			{
				return this._quiz;
			}
			set
			{
				if ((this._quiz != value))
				{
					this.OnquizChanging(value);
					this.SendPropertyChanging();
					this._quiz = value;
					this.SendPropertyChanged("quiz");
					this.OnquizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_performance", DbType="Int")]
		public System.Nullable<int> class_performance
		{
			get
			{
				return this._class_performance;
			}
			set
			{
				if ((this._class_performance != value))
				{
					this.Onclass_performanceChanging(value);
					this.SendPropertyChanging();
					this._class_performance = value;
					this.SendPropertyChanged("class_performance");
					this.Onclass_performanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_final", DbType="Int")]
		public System.Nullable<int> final
		{
			get
			{
				return this._final;
			}
			set
			{
				if ((this._final != value))
				{
					this.OnfinalChanging(value);
					this.SendPropertyChanging();
					this._final = value;
					this.SendPropertyChanged("final");
					this.OnfinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="VarChar(50)")]
		public string grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
